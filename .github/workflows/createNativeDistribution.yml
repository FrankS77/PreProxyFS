name: PreProxyFS native distribution for multiple operating systems

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        gu-binary: [gu, gu.cmd]
        exclude:
          - os: ubuntu-latest
            gu-binary: gu.cmd
          - os: macos-latest
            gu-binary: gu.cmd
          - os: windows-latest
            gu-binary: gu
    steps:
      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: '21.0.0.java11'
      - name: Install native-image component
        run: |
          ${{ matrix.gu-binary }} install native-image
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        if: runner.os == 'macOS' || runner.os == 'Linux'
      - name: Build with Gradle macOS and Linux
        run: ./gradlew packageDistribution
        if: runner.os == 'macOS' || runner.os == 'Linux'
      - name: Build with Gradle Windows
        run: ./gradlew.bat packageDistribution
        if: runner.os == 'Windows' 
      - name: Get version and set env macOS and Linux
        run: |
              echo "pversion=$(./gradlew -q getVersion)"  >> $GITHUB_ENV
        if: runner.os == 'macOS' || runner.os == 'Linux'
      - name: Get version and set env Windows 
        run: |
           $pver = (./gradlew.bat -q getVersion) -join "`n"; Write-Output  ("pversion=$pver") | Out-File -FilePath $Env:GITHUB_ENV -Append
        if: runner.os == 'Windows'

      - name: 'Publish zip release'
        uses: actions/upload-artifact@v2
        with:
          path: build/distributions/PreProxyFS-${{env.osname}}-${{env.pversion}}.zip
      - name: 'Upload Release Asset'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: build/distributions/PreProxyFS-${{env.osname}}-${{env.pversion}}.zip
          asset_name: PreProxyFS-${{env.osname}}-${{env.pversion}}.zip
          asset_content_type: application/zip
